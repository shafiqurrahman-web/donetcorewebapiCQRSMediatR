// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using BBBSLI.DSS.MobileApp.Infrastructure.AppDbContext;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace BBBSLI.DSS.MobileApp.Infrastructure.AppDbContext.Configurations
{
    public partial class DonorConfiguration : IEntityTypeConfiguration<Donor>
    {
        public void Configure(EntityTypeBuilder<Donor> entity)
        {
            entity.HasIndex(e => e.PhoneNumber, "DF__UC_Donor")
                    .IsUnique();

                entity.Property(e => e.AlternatePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ApilookupStatus).HasColumnName("APILookupStatus");

                entity.Property(e => e.CarrierErrorCode).HasMaxLength(100);

                entity.Property(e => e.CarrierException).HasMaxLength(1000);

                entity.Property(e => e.CarrierMobileCountryCode).HasMaxLength(10);

                entity.Property(e => e.CarrierMobileNetworkCode).HasMaxLength(10);

                entity.Property(e => e.CarrierName).HasMaxLength(100);

                entity.Property(e => e.CarrierType).HasMaxLength(100);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.DateCreated)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateKey).HasDefaultValueSql("(CONVERT([int],CONVERT([char](8),getdate(),(112))))");

                entity.Property(e => e.DateModified)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive).HasDefaultValue(false);

                entity.Property(e => e.IsEmailPreferred).HasDefaultValue(false);

                entity.Property(e => e.IsFillerBlastEmailSubscribed).HasDefaultValue(false);

                entity.Property(e => e.IsMassRescheduleEmailSubscribed).HasDefaultValue(false);

                entity.Property(e => e.IsNewsletterEmailSubscribed).HasDefaultValue(false);

                entity.Property(e => e.IsPhonePreferred).HasDefaultValue(false);

                entity.Property(e => e.IsSmspreferred)
                    .HasDefaultValue(false)
                    .HasColumnName("IsSMSPreferred");

                entity.Property(e => e.Ismigrated).HasColumnName("ismigrated");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Organization)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneNumber)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Salutation)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SmsOptInSubscribe).HasColumnName("smsOptInSubscribe");

                entity.Property(e => e.SmsOptInUnSubscribe).HasColumnName("smsOptInUnSubscribe");

                entity.Property(e => e.TwilioMessageReplys)
                    .HasMaxLength(500)
                    .HasColumnName("twilioMessageReplys");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Donor> entity);
    }
}
